apiVersion: v1
kind: Namespace
metadata:
  name: persistent-nginx
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: test-pv-claim
  namespace: persistent-nginx
spec:
  storageClassName: rook-cephfs
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: nginx
  namespace: persistent-nginx
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      volumes:
        - name: test-pv-storage
          persistentVolumeClaim:
            claimName: test-pv-claim
      containers:
        - name: nginx
          image: nginx
          ports:
            - name: web
              containerPort: 80
          volumeMounts:
            - mountPath: "/usr/share/nginx/html"
              name: test-pv-storage
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: persistent-nginx
spec:
  ports:
    - protocol: TCP
      name: web
      port: 80
  selector:
    app: nginx
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: ingress-tls
  namespace: persistent-nginx # Must be the same as the service
spec:
  entryPoints:
    - websecure
  routes:
  - match: Host(`persistent-nginx.scitizen.loc`)
    kind: Rule
    services:
    # Beware: the service MUST be in the same namespace than the IngressRoute.
    - name: nginx
      kind: Service
      port: 80
  tls:
    certResolver: myresolver
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: ingress-notls
  namespace: persistent-nginx # Must be the same as the service
spec:
  entryPoints:
    - web
  routes:
  - match: Host(`persistent-nginx.scitizen.loc`)
    kind: Rule
    services:
    # Beware: the service MUST be in the same namespace than the IngressRoute.
    - name: nginx
      kind: Service
      port: 80
