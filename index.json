[{"content":"Kubernetes is\u0026hellip;. Quite a thing, to say the least ! ðŸ˜… Even if their conceptors did a great job at making the kubectl cli as usable as possible, it can sometimes be a pain to be productive with it, read outputs, or do repetitive tasks. That\u0026rsquo;s why I wrote this small Quality of life improvements post: to regroup some install steps you might have missed, give you some useful 3rd party tools or maybe even give you tips a step ahead.\nkubectl auto-complete   References   ðŸ“š kubectl installation manual    Autocomplete is nice, and a real time saver. It avoids typos, and it\u0026rsquo;s quite satisfying to type a complete command in 4 keystrokes and a couple of tabs correctly placed. (even if I\u0026rsquo;m always unsure when relying on my browser\u0026rsquo;s autocomplete for https://analytics.google.com ðŸ˜‘).\nBut for this one, I can only say one thing, and you have no excuses:\n  \nSo, short stories short, and depending on your shell, type in:\nzsh bash  1 2 3 4  echo \u0026#39;autoload -Uz compinit compinit source \u0026lt;(kubectl completion zsh)\u0026#39; \u0026gt;\u0026gt; ~/.zshrc source ~/.zshrc      All the (bad) flavours come from the natural world.\n 1 2 3 4 5 6 7 8 9 10 11  # Install the bash completion main script (assuming you\u0026#39;re on a RHEL/CentOS/Fedora) dnf install bash-completion # Reload env source ~/.bashrc # Check if bash_completion is properly imported, or add it to your bashrc if ! type _init_completion; then echo \u0026#39;source /usr/share/bash-completion/bash_completion\u0026#39; \u0026gt;\u0026gt; ~/.bashrc fi # Source the completion script echo \u0026#39;source \u0026lt;(kubectl completion bash)\u0026#39; \u0026gt;\u0026gt; ~/.bashrc source ~/.bashrc       'use strict'; var containerId = JSON.parse(\"\\\"e5c5d0542d8caf10\\\"\"); var containerElem = document.getElementById(containerId); var tabLinks = null; var tabContents = null; var ids = []; if (containerElem) { tabLinks = containerElem.querySelectorAll('.tab__link'); tabContents = containerElem.querySelectorAll('.tab__content'); } for (var i = 0; i 0) { tabContents[0].style.display = 'block'; }  kubecolor: prettier kubectl commands outputs with colors   References   Add ANSI colors to kubectl describe and other outputs kubecolor    1 2 3  go get -u github.com/dty1er/kubecolor/cmd/kubecolor # Make sure kubecolor is found which kubecolor   If the command above did not worked, then you may have a problem with your $GOPATH or $GOHOME environment variables. If none are set, then the package was installed in ~/go/bin. Either fix your vars or add ~/go/bin to your $PATH.\nFinally, you could either use kubecolor instead of kubectl, or alias kubectl as kubecolor with the following code sample:\n1 2 3 4 5 6 7 8 9  # Backup original `kubectl` command path. Supports subsequent imports of the file. echo \u0026#39;export KUBECTL_ORIG_PATH=\u0026#34;${KUBECTL_ORIG_PATH:-\u0026#34;$(which kubectl)\u0026#34;}\u0026#34;\u0026#39; \u0026gt;\u0026gt; {{profileFile}} # Alias the real `kubectl` as `kubectll` echo \u0026#39;alias kubectll=\u0026#34;${KUBECTL_ORIG_PATH}\u0026#34;\u0026#39; \u0026gt;\u0026gt; {{profileFile}} # Alias kubectl to use colors by default echo \u0026#39;alias kubectl=\u0026#34;kubecolor\u0026#34;\u0026#39; \u0026gt;\u0026gt; {{profileFile}} # Enable the autocompletion for the alias too (see auto-complete install above) echo \u0026#34;complete -o default -F __start_kubectl kubecolor\u0026#34; \u0026gt;\u0026gt; {{profileFile}} source {{profileFile}}   I noticed some little things does not work well with kubecolor. That\u0026rsquo;s why the script above let you use the original kubectl command through kubectll. For instance, I noticed that some commands prompting user input (so using stdin), such as kubectl login we\u0026rsquo;ll see after don\u0026rsquo;t work.\nSo, if you try a command that seems to not work as expected, or stay stuck, fall back to kubectll.\n helm: a kubernetes stack template repository We are also going to use some  Helm charts . To install helm, run the following command:\n1 2  # See https://helm.sh/docs/intro/install/ curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash   krew: a kubectl plugins manager   krew  is a nice small plugin manager for your kubectl command. At the time of writing, it has  129 plugins available , including some pretty convinient to restart pods, login using OpenId, check the state of your cluster, and more.\nTo install krew, run the following: (taken from  the docs )\n Think about replacing {{profileFile}} with your actual zsh or bash profile\n 1 2 3 4 5 6 7 8 9 10 11 12 13  # Install krew ( set -x; cd \u0026#34;$(mktemp -d)\u0026#34; \u0026amp;\u0026amp; curl -fsSLO \u0026#34;https://github.com/kubernetes-sigs/krew/releases/latest/download/krew.tar.gz\u0026#34; \u0026amp;\u0026amp; tar zxvf krew.tar.gz \u0026amp;\u0026amp; KREW=./krew-\u0026#34;$(uname | tr \u0026#39;[:upper:]\u0026#39; \u0026#39;[:lower:]\u0026#39;)_$(uname -m | sed -e \u0026#39;s/x86_64/amd64/\u0026#39; -e \u0026#39;s/arm.*$/arm/\u0026#39;)\u0026#34; \u0026amp;\u0026amp; \u0026#34;$KREW\u0026#34; install krew ) # Add it to your $PATH and reload config echo \u0026#39;export PATH=\u0026#34;${KREW_ROOT:-$HOME/.krew}/bin:$PATH\u0026#34;\u0026#39; \u0026gt;\u0026gt; {{profileFile}} source {{profileFile}} # Check krew works kubectl krew   One ring to rule them all For this one, I plead guilty of not using it enough, but it contains a lot of useful knowledge and possible solutions of most of your problems.\nYou guessed it, I\u0026rsquo;m talking about documentation. (because it would be an insult to tell you that StackOverflow is a thing.)\nRead it carefully. Take time to understand it and its underlying concepts. Don\u0026rsquo;t use tools you don\u0026rsquo;t know how they work. Because when things breaks, your knowledge of what and how it broke will help you to solve the problem quickly and without damages. So, read the documentation of your containers, your helm charts, your kubernetes network layer, and, of course, kubernetes and docker themselves.\n","description":"","id":0,"section":"blog","tags":["kubernetes"],"title":"Quality Of Life improvements to kubernetes","uri":"https://gerkindev.github.io/devblog/blog/kubernetes-qol/"},{"content":"Hello world ! ","description":"","id":1,"section":"","tags":null,"title":"About","uri":"https://gerkindev.github.io/devblog/about/"}]